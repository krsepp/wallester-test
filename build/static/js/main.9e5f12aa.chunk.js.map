{"version":3,"sources":["components/Navigation.tsx","containers/PageContainer.tsx","services/reqres.ts","enums/JobTypes.ts","components/UserList.tsx","containers/HeaderContainer.tsx","pages/Homepage.tsx","pages/Page.tsx","components/User.tsx","pages/UserPage.tsx","components/ModalDialog.tsx","components/UserForm.tsx","pages/AddUserPage.tsx","containers/App.tsx","reportWebVitals.js","index.tsx"],"names":["Navigation","Navbar","bg","expand","className","Brand","Toggle","aria-controls","Collapse","id","Nav","exact","to","isActive","match","location","pathname","indexOf","PageContainer","children","API_ENDPOINT","page","a","fetch","response","json","name","job","headers","Headers","append","body","JSON","stringify","requestOptions","method","JobTypes","UserList","useState","listUsers","setListUsers","history","useHistory","useEffect","getListUsers","then","Table","responsive","hover","scope","firstRowIndex","per_page","data","map","user","index","first_name","last_name","displayUsers","pageCount","total_pages","pageRangeDisplayed","marginPagesDisplayed","containerClassName","pageClassName","previousClassName","nextClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","activeClassName","initialPage","forcePage","disableInitialCallback","onPageChange","push","selected","HeaderContainer","headerText","Homepage","Page","pageNum","useParams","User","setUser","getSingleUser","src","avatar","alt","email","UserPage","idNum","ModalDialog","showModal","setShowModal","Modal","show","onHide","Header","closeButton","Body","Footer","Button","variant","onClick","UserForm","setName","SOFTWARE_ENGINEER","setJob","dateOfBirth","setDateOfBirth","setResponse","showResponse","setShowResponse","formElement","useRef","Form","onSubmit","event","preventDefault","today","Date","diff","Math","abs","getTime","floor","createUser","current","reset","ref","Group","controlId","Label","Control","required","type","placeholder","pattern","value","onChange","e","target","as","Object","values","valueAsDate","AddUserPage","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e5f12aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\n\r\nconst Navigation: React.FC = () => {\r\n    function isUsersActive(match: any, location: any): boolean {\r\n        return location.pathname.indexOf('/users/') !== -1;\r\n    }\r\n    \r\n    return (\r\n        <Navbar bg='light' expand='sm' className='p-0 mb-4'>\r\n            <Navbar.Brand className='text-primary'>Wallester</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n            <Navbar.Collapse id='basic-navbar-nav'>\r\n                <Nav className='mr-auto'>\r\n                    <NavLink exact to='/' className='nav-link'>Home</NavLink>\r\n                    <NavLink to='/users/1' className='nav-link' isActive={isUsersActive}>Users</NavLink>\r\n                    <NavLink to='/user/add' className='nav-link'>Add user</NavLink>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport IPageContainerProps from '../interfaces/IPageContainerProps';\r\nimport Navigation from '../components/Navigation';\r\n\r\nconst PageContainer: React.FC<IPageContainerProps> = ({ className, children }) => {\r\n    return (\r\n        <div className={`page ${className || ''} p-3`}>\r\n            <Navigation/>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageContainer;","import IListUsers from '../interfaces/IListUsers';\r\nimport ISingleUser from '../interfaces/ISingleUser';\r\n\r\nconst API_ENDPOINT = 'https://reqres.in/api/';\r\n\r\nexport async function getListUsers(page: number): Promise<IListUsers> {\r\n    const response = await fetch(`${API_ENDPOINT}users?page=${page}`);\r\n    return await response.json();\r\n}\r\n\r\nexport async function getSingleUser(id: number): Promise<ISingleUser> {\r\n    const response = await fetch(`${API_ENDPOINT}users/${id}`);\r\n    return await response.json();\r\n}\r\n\r\nexport async function createUser(name: string, job: string) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    let body = JSON.stringify({\r\n        'name': name,\r\n        'job': job\r\n    });\r\n\r\n    let requestOptions: object = {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: body,\r\n    };\r\n\r\n    const response = await fetch(`${API_ENDPOINT}users`, requestOptions);\r\n    return await response.json();\r\n}\r\n","export enum JobTypes {\r\n    SOFTWARE_ENGINEER = \"Software Engineer\",\r\n    PAINTER = \"Painter\",\r\n    BUS_DRIVER = \"Bus driver\"\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport IUserListProps from '../interfaces/IUserListProps';\r\nimport {getListUsers} from '../services/reqres';\r\nimport IListUsers from '../interfaces/IListUsers';\r\nimport ReactPaginate from 'react-paginate';\r\nimport {Table} from 'react-bootstrap';\r\n\r\nconst UserList: React.FC<IUserListProps> = ({ page }) => {\r\n    const [listUsers, setListUsers] = useState<IListUsers|null>(null);\r\n    const history = useHistory();\r\n\r\n    function displayUsers(): React.ReactElement[]|null {\r\n        if (listUsers !== null) {\r\n            let firstRowIndex = ((page - 1) * listUsers.per_page) + 1;\r\n\r\n            return listUsers.data.map((user, index) => {\r\n               return (\r\n                   <tr key={user.id}>\r\n                       <th scope='row'>{firstRowIndex + index}</th>\r\n                       <td>{user.first_name}</td>\r\n                       <td>{user.last_name}</td>\r\n                       <td>\r\n                           <NavLink to={`/user/${user.id}`} className='btn-link'>\r\n                               Show\r\n                           </NavLink>\r\n                       </td>\r\n                   </tr>\r\n               );\r\n            });\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function handlePageClick(page: any): void {\r\n        history.push(`/users/${page.selected + 1}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getListUsers(page).then(listUsers => setListUsers(listUsers));\r\n    }, [page]);\r\n\r\n\r\n    return listUsers !== null ? (\r\n        <div className='user-list'>\r\n            <Table responsive hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope='col'>#</th>\r\n                        <th scope='col'>First</th>\r\n                        <th scope='col'>Last</th>\r\n                        <th scope='col'>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {displayUsers()}\r\n                </tbody>\r\n            </Table>\r\n\r\n            <ReactPaginate\r\n                pageCount={listUsers.total_pages}\r\n                pageRangeDisplayed={3}\r\n                marginPagesDisplayed={1}\r\n                containerClassName='pagination justify-content-center mt-3'\r\n                pageClassName='page-item'\r\n                previousClassName='d-none'\r\n                nextClassName='d-none'\r\n                pageLinkClassName='page-link'\r\n                previousLinkClassName='page-link'\r\n                nextLinkClassName='page-link'\r\n                activeClassName='active'\r\n                initialPage={page-1}\r\n                forcePage={page-1}\r\n                disableInitialCallback={true}\r\n                onPageChange={handlePageClick}\r\n            />\r\n        </div>\r\n    ) : (\r\n        <p>No users</p>\r\n    );\r\n};\r\n\r\nexport default UserList;","import React from 'react';\r\n\r\ninterface IHeaderContainerProps {\r\n    headerText: string\r\n}\r\n\r\nconst HeaderContainer: React.FC<IHeaderContainerProps> = ({ children, headerText }) => {\r\n    return (\r\n        <div className='mb-4 d-flex align-items-baseline'>\r\n            <h1 className='h4'>{headerText}</h1>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderContainer;","import React from 'react';\r\nimport PageContainer from '../containers/PageContainer';\r\nimport UserList from '../components/UserList';\r\nimport HeaderContainer from '../containers/HeaderContainer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Homepage: React.FC = () => {\r\n    const currentPage: number = 1;\r\n\r\n    return (\r\n        <PageContainer className={'homepage'}>\r\n            <HeaderContainer headerText='Users'>\r\n                <NavLink to='/user/add' className='btn btn-primary ml-3'>\r\n                    Add\r\n                </NavLink>\r\n            </HeaderContainer>\r\n            <UserList page={currentPage}/>\r\n        </PageContainer>\r\n    );\r\n};\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport {useParams} from 'react-router';\r\nimport PageContainer from '../containers/PageContainer';\r\nimport UserList from '../components/UserList';\r\nimport {NavLink} from 'react-router-dom';\r\nimport HeaderContainer from '../containers/HeaderContainer';\r\n\r\nconst Page: React.FC = () => {\r\n    const { page } = useParams<{ page: string }>();\r\n    const pageNum = +page;\r\n\r\n    return (\r\n        <PageContainer>\r\n            <HeaderContainer headerText='Users'>\r\n                <NavLink to='/user/add' className='btn btn-primary ml-3'>\r\n                    Add\r\n                </NavLink>\r\n            </HeaderContainer>\r\n            <UserList page={pageNum}/>\r\n        </PageContainer>\r\n    );\r\n};\r\n\r\nexport default Page;","import React, {useEffect, useState} from 'react';\r\nimport IUserProps from '../interfaces/IUserProps';\r\nimport ISingleUser from '../interfaces/ISingleUser';\r\nimport {getSingleUser} from '../services/reqres';\r\nimport {Table} from 'react-bootstrap';\r\nimport HeaderContainer from '../containers/HeaderContainer';\r\n\r\nconst User: React.FC<IUserProps> = ({ id }) => {\r\n    const [user, setUser] = useState<ISingleUser|null>(null);\r\n\r\n    useEffect(() => {\r\n        getSingleUser(id).then(user => setUser(user));\r\n    }, [id]);\r\n\r\n    return user !== null ? (\r\n        <div className='user'>\r\n            <HeaderContainer headerText={`${user.data.first_name} ${user.data.last_name}`}/>\r\n\r\n            <Table responsive hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope='col'>avatar</th>\r\n                        <th scope='col'>id</th>\r\n                        <th scope='col'>First</th>\r\n                        <th scope='col'>Last</th>\r\n                        <th scope='col'>email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <img src={user.data.avatar} alt='user avatar' className='img-fluid user-avatar'/>\r\n                        </td>\r\n                        <th scope='row'>{user.data.id}</th>\r\n                        <td>{user.data.first_name}</td>\r\n                        <td>{user.data.last_name}</td>\r\n                        <td>{user.data.email}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    ) : (\r\n        <p>No user</p>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport {useParams} from 'react-router';\r\nimport PageContainer from '../containers/PageContainer';\r\nimport User from '../components/User';\r\n\r\nconst UserPage: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const idNum = +id;\r\n\r\n    return (\r\n      <PageContainer className={'user-page'}>\r\n          <User id={idNum}/>\r\n      </PageContainer>\r\n    );\r\n};\r\n\r\nexport default UserPage;","import React from 'react';\r\nimport {Modal, Button} from 'react-bootstrap';\r\n\r\ninterface IModalDialogProps {\r\n    showModal: boolean,\r\n    setShowModal: (showModal: boolean) => void\r\n}\r\n\r\nconst ModalDialog: React.FC<IModalDialogProps> = ({ children, showModal, setShowModal }) => {\r\n   return (\r\n       <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n           <Modal.Header closeButton/>\r\n           <Modal.Body>{children}</Modal.Body>\r\n           <Modal.Footer>\r\n               <Button variant='primary' onClick={() => setShowModal(false)}>\r\n                   Ok\r\n               </Button>\r\n           </Modal.Footer>\r\n       </Modal>\r\n   );\r\n} ;\r\n\r\nexport default ModalDialog;","import React, {useRef, useState} from 'react';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport {JobTypes} from '../enums/JobTypes'\r\nimport ICreateUserResponse from '../interfaces/ICreateUserResponse';\r\nimport {createUser} from '../services/reqres';\r\nimport ModalDialog from './ModalDialog';\r\n\r\nconst UserForm: React.FC = () => {\r\n    const [name, setName] = useState<string>('');\r\n    const [job, setJob] = useState<string>(JobTypes.SOFTWARE_ENGINEER);\r\n    const [dateOfBirth, setDateOfBirth] = useState<Date|null>(null);\r\n    const [response, setResponse] = useState<ICreateUserResponse|null>(null);\r\n    const [showResponse, setShowResponse] = useState<boolean>(false);\r\n    const [showModal, setShowModal] = useState<boolean>(false);\r\n    const formElement = useRef<HTMLFormElement>(null);\r\n\r\n    function handleSubmit(event:React.FormEvent): void {\r\n        event.preventDefault();\r\n        let today: Date = new Date();\r\n\r\n        if (dateOfBirth !== null) {\r\n            let diff = Math.abs(today.getTime() - dateOfBirth.getTime());\r\n            let age = Math.floor(diff / (1000 * 60 * 60 * 24 * 30 * 12));\r\n            if (age < 18) {\r\n                setShowModal(true);\r\n                return;\r\n            }\r\n        }\r\n\r\n        createUser(name, job).then((data) => {\r\n            setResponse(data);\r\n            setName('');\r\n            setJob(JobTypes.SOFTWARE_ENGINEER);\r\n            setShowResponse(true);\r\n            if (formElement.current !== null) formElement.current.reset();\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='form-container'>\r\n            <Form onSubmit={handleSubmit} className='mb-3' ref={formElement}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        pattern='[a-zA-Z ]+'\r\n                        value={name}\r\n                        onChange={(e:React.ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='job'>\r\n                    <Form.Label>Job</Form.Label>\r\n                    <Form.Control\r\n                        as='select'\r\n                        value={job}\r\n                        onChange={(e:React.ChangeEvent<HTMLSelectElement>) => setJob(e.target.value)}\r\n                    >\r\n                        {Object.values(JobTypes).map(value => (\r\n                                <option\r\n                                    key={value}\r\n                                    value={value}\r\n                                >\r\n                                    {value}\r\n                                </option>\r\n                            )\r\n                        )}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='dateOfBirth'>\r\n                    <Form.Label>Date of birth</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='date'\r\n                        placeholder='Pick a date'\r\n                        onChange={(e:React.ChangeEvent<HTMLInputElement>) => setDateOfBirth(e.target.valueAsDate)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button variant='primary' type='submit'>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n\r\n            {showResponse ?\r\n                <div>\r\n                    <span className='d-block text-danger mb-2'>User successfully created!</span>\r\n                    <div className='text-break'>{JSON.stringify(response)}</div>\r\n                </div>\r\n            : null}\r\n\r\n            {showModal ?\r\n                <ModalDialog showModal={showModal} setShowModal={setShowModal}>\r\n                    Account cannot be created! Age should be above 18 years old!\r\n                </ModalDialog>\r\n            : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserForm;","import React from 'react';\r\nimport PageContainer from '../containers/PageContainer';\r\nimport UserForm from '../components/UserForm';\r\nimport HeaderContainer from '../containers/HeaderContainer';\r\n\r\nconst AddUserPage: React.FC = () => {\r\n    return (\r\n        <PageContainer className={'add-user-page'}>\r\n            <HeaderContainer headerText='Add user'/>\r\n            <UserForm/>\r\n        </PageContainer>\r\n    );\r\n};\r\n\r\nexport default AddUserPage;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Homepage from '../pages/Homepage';\nimport Page from '../pages/Page';\nimport UserPage from '../pages/UserPage';\nimport AddUserPage from '../pages/AddUserPage';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/' component={Homepage}/>\n        <Route path='/user/add' component={AddUserPage}/>\n        <Route path='/users/:page' component={Page}/>\n        <Route path='/user/:id' component={UserPage}/>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.scss';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('container')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}